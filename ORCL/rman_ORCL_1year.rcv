# Copyright Â© 2020 Andrea Monti. All rights reserved.
# These scripts come without warranty of any kind. Use them at your own risk. 
# I assume no liability for the accuracy, correctness, completeness, or 
# usefulness of any information provided by this files nor for any sort of 
# damages using these scripts may cause.
#
# date:     2020-04-09
# version:  2.7
# history:
# 2020-04-09   MontiA    spellchecking, neated

sql 'alter session set NLS_DATE_FORMAT="dd/mm/yyyy hh24:mi:ss" ' ;

show all ;

run
{
  # This script will be used to produce archvival, long-term retention backup
  # Since we may accept this backup to run slower than ordinary backup, I will 
  # make an explic allocation of a single channel in order not to use the 
  # same degree of parallelism that we configured in the default rman environment.
  # Please remember that parallelism will not work with Standard Edition: 
  # if you allocate more sbt_tape channels while using SE, only one channel will be used;
  # moreover you will get RMAN warnings which might be interpreted as failures
  #
  allocate channel c1 device type 'SBT_TAPE' parms 'ENV=(TDPO_OPTFILE=/home/oracle/scripts/ORCL/TSM/TDP/ORCL_tdpo.opt)' ;
  # allocate channel c2 device type 'SBT_TAPE' ;


  # I will use an input variable to TAG this backup in order to put 
  # the same TAG on any backupset.
  # This will allow us to use the tag to manage this backup
  # (i.e. modify the retention, delete a specific backup, restore or 
  # duplicate from a specific backup...)
  # IMPORTATNT: if no input variable is used, rman will ask for it and wait forever!
  #
  # I will do a FULL backup rather than a LEVEL 0 backup because this 
  # backup will not be used in any incremental backup strategy
  #
  backup
   full filesperset 3
   database 
   format '%d_%T_%u_total_1_year' tag 'FULL_1YEAR_&1' keep until time = 'SYSDATE+400' ;


  # The full backup can be used to restore the database, but it will not
  # be sufficient to run a duplicate: the backup command will:
  #  - backup database at time t0
  #  - backup required archivelog at time t1
  #  - backup spfile at time t2
  #  - backup controlfile at time t3 
  # hence it will never contain the redo stream between time t1 and t2.
  # This will force any duplicate to fail: 
  #  - duplicate until time t1 will fail with "no controlfile backup found"
  #  - duplicate until time t3 will fail with "no backup of log X found"
  # As a workaround, I will make an additional, partially redundant log backup at time t4 
  
  alter system archive log current ;

  backup 
   archivelog from scn &2 incarnation current 
   format '%d_%T_%u_total_1_year' tag 'FULL_1YEAR_&1' keep until time = 'SYSDATE+400' ;

  release  channel c1 ;
  # release  channel c2 ;
}

